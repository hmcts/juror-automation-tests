#!groovy
properties([
  parameters([
    choice(choices: ['chrome', 'firefox', 'msedge'], name: 'Browser'),
    choice(choices: ['stg', 'test', 'demo', 'ithc'], name: 'EnvironmentChoice'),
    booleanParam(name: 'runJurorTransformation', defaultValue: false, description: 'Include JurorTransformation tests'),
    booleanParam(name: 'runJurorTransformationMulti', defaultValue: false, description: 'Include JurorTransformationMulti tests'),
    booleanParam(name: 'runJurorTransformationWIP', defaultValue: false, description: 'Include JurorTransformationWIP tests'),
    booleanParam(name: 'runShakedown', defaultValue: false, description: 'Include Shakedown tests')
  ])
])

@Library("Infrastructure") 

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "juror"
def component = "automation-tests"

def secrets = [
  "juror-${params.EnvironmentChoice}": [
    secret('automation-tests-modtestbureau', 'MODTESTBUREAU_PASSWORD'), 
    secret('automation-tests-modtestcourt', 'MODTESTCOURT_PASSWORD'),
    secret('automation-tests-system', 'SYSTEM_PASSWORD'),
    secret('automation-tests-sjouser', 'SJOUSER_PASSWORD'),
    secret('automation-tests-sjouser1', 'SJOUSER1_PASSWORD'),
    secret('automation-tests-aramis1', 'ARAMIS1_PASSWORD'),
    secret('automation-tests-cpass', 'CPASS_PASSWORD'),
  ],
  'juror-stg': [
    secret('api-POSTGRES-USER', 'DATABASE_STG_USERNAME'),
    secret('api-POSTGRES-PASS', 'DATABASE_STG_PASSWORD'),
  ],
  'juror-test': [
    secret('api-POSTGRES-USER', 'DATABASE_TEST_USERNAME'),
    secret('api-POSTGRES-PASS', 'DATABASE_TEST_PASSWORD'),
  ],
  'juror-demo': [
    secret('api-POSTGRES-USER', 'DATABASE_DEMO_USERNAME'),
    secret('api-POSTGRES-PASS', 'DATABASE_DEMO_PASSWORD'),
  ],
  'juror-ithc': [
    secret('api-POSTGRES-USER', 'DATABASE_ITHC_USERNAME'),
    secret('api-POSTGRES-PASS', 'DATABASE_ITHC_PASSWORD'),
  ],
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

GradleBuilder builder = new GradleBuilder(this, product)

withNightlyPipeline(type, product, component) {
  loadVaultSecrets(secrets)
  enableFullFunctionalTest(600)
  enableSlackNotifications('#juror-build-notices')

  env.envName = params.EnvironmentChoice
  env.envDriver = params.Browser
  env.runJurorTransformation = params.runJurorTransformation
  env.runJurorTransformationMulti = params.runJurorTransformationMulti
  env.runJurorTransformationWIP = params.runJurorTransformationWIP
  env.runShakedown = params.runShakedown
  

  afterAlways('fullFunctionalTest') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "target/TestRunner_/JurorTransformation",
      reportFiles          : "cucumber.html",
      reportName           : "Cucumber JurorTransformation Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "target/TestRunner_JurorTransformationMulti/",
      reportFiles          : "cucumber.html",
      reportName           : "Cucumber JurorTransformationMulti Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "target/TestRunner_JurorTransformationWIP/",
      reportFiles          : "cucumber.html",
      reportName           : "Cucumber JurorTransformationWIP Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "target/TestRunner_Shakedown/",
      reportFiles          : "cucumber.html",
      reportName           : "Cucumber Shakedown Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "target/TestRunner_SmokeTest/",
      reportFiles          : "cucumber.html",
      reportName           : "Cucumber Smoke Test Report"
    ]

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'selenium.log'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'target/**/*.json'
  }
}

