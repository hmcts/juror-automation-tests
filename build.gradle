plugins {
  id 'java-library'
  id 'org.owasp.dependencycheck' version '9.2.0'
  id 'jacoco'
  id 'idea'
  id 'eclipse'
  id 'application'
}

group = 'uk.gov.hmcts'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = 10
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencies {
  implementation 'log4j:log4j:1.2.17'
  implementation 'org.slf4j:slf4j-api:1.7.36'
  implementation 'org.slf4j:slf4j-log4j12:1.7.36'

  implementation 'org.seleniumhq.selenium:selenium-java:4.26.0'

  testImplementation 'io.github.prashant-ramcharan:courgette-jvm:6.13.0'

  implementation 'org.apache.httpcomponents:httpclient:4.5.14'
  implementation 'org.apache.httpcomponents:httpcore:4.4.16'

  testImplementation 'io.cucumber:cucumber-picocontainer:7.20.1'

  implementation 'io.cucumber:cucumber-junit:7.20.1'

  testImplementation 'io.cucumber:cucumber-jvm-deps:1.0.6'

  testImplementation 'io.cucumber:cucumber-core:7.20.1'

  testImplementation 'io.cucumber:cucumber-java:7.20.1'
  implementation 'org.hamcrest:hamcrest-core:2.2'

  implementation group: 'commons-io', name: 'commons-io', version: '1.3.+'
  implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.11.3'

  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
  implementation group: 'net.sf.opencsv', name: 'opencsv', version: '2.+'

  implementation group: 'com.codeborne', name: 'phantomjsdriver', version: '1.5.0'

  implementation group: 'org.apache.chemistry.opencmis', name: 'chemistry-opencmis-client-impl', version: '1.1.+'

  implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'

  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
}

task functional(type: Test, dependsOn: testClasses) {
  systemProperty "envName", System.getenv("envName")
  systemProperty "envDriver", System.getenv("envDriver")

  def runExpenses = System.getenv("runExpenses")
  def runFeatures = System.getenv("runFeatures")
  def runJurorTransformation = System.getenv("runJurorTransformation")
  def runJurorTransformationMulti = System.getenv("runJurorTransformationMulti")
  def runJurorTransformationWIP = System.getenv("runJurorTransformationWIP")
  def runRegression = System.getenv("runRegression")
  def runRegressionSingle = System.getenv("runRegressionSingle")
  def runRegressionWelsh = System.getenv("runRegressionWelsh")
  def runShakedown = System.getenv("runShakedown")
  
  if (runExpenses == 'true') {
    include '**/TestRunner_Expenses.class'
  }
  if (runFeatures == 'true') {
    include '**/TestRunner_Features.class'
  }
  if (runJurorTransformation == 'true') {
    include '**/TestRunner_JurorTransformation.class'
  }
  if (runJurorTransformationMulti == 'true') {
    include '**/TestRunner_JurorTransformationMulti.class'
  }
  if (runJurorTransformationWIP == 'true') {
    include '**/TestRunner_JurorTransformationWIP.class'
  }
  if (runRegression == 'true') {
    include '**/TestRunner_Regression.class'
  }
  if (runRegressionSingle == 'true') {
    include '**/TestRunner_RegressionSingle.class'
  }
  if (runRegressionWelsh == 'true') {
    include '**/TestRunner_RegressionWelsh.class'
  }
  if (runShakedown == 'true') {
    include '**/TestRunner_Shakedown.class'
  }
  //Always run SmokeTest
  include '**/TestRunner_SmokeTest.class'
  outputs.upToDateWhen { false }
}
